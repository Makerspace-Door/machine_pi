#!/usr/bin/python3
#
# Mifare Desfire NFC Python Module
# Copyright (C) 2019  Christian Carlowitz <chca@cmesh.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
# for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#

""" mdnfc_tool

Usage:
    mdnfc_tool
    mdnfc_tool (-l|--list)
    mdnfc_tool (--test1)
    mdnfc_tool (--test2)

Options:
    -l --list   List tags and contents
    --test1   Test 1
    --test2   Test 2
"""

import sys
import mdnfc
import time

from docopt import docopt


if __name__ == '__main__':

    args = docopt(__doc__)

    mdnfc.init()

    if args["--list"]:
        tags = mdnfc.list_tags()
        for t in tags:
            uid = t["uid"]
            print("tag", uid)
            mdnfc.connect(uid)
            aids = mdnfc.get_appids()
            print(" apps: " + " ".join([str(aid) for aid in aids]))
            mdnfc.disconnect(t)

    elif args["--test1"]:
        tags = mdnfc.list_tags()
        for t in tags:
            uid = t["uid"]
            print("tag", uid)
            mdnfc.connect(uid)
            
            mdnfc.app_select(0)
            oldkey = bytes.fromhex("0000000000000000")
            mdnfc.auth_insecure(0, oldkey)

            newkey = bytes.fromhex("00000000000000000000000000000001")
            mdnfc.change_key(0, oldkey, newkey)

            mdnfc.disconnect(t)

    elif args["--test2"]:
        tags = mdnfc.list_tags()
        for t in tags:
            uid = t["uid"]
            print("tag", uid)
            mdnfc.connect(uid)
            
            mdnfc.app_select(0)
            newkey = bytes.fromhex("00000000000000000000000000000001")
            mdnfc.auth_secure(0, newkey)

            mdnfc.disconnect(t)

    mdnfc.deinit()

